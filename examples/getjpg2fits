#! /usr/bin/env python
#
#   this script grabs a JPG from the RP3 and converts it to 16 bit FITS
#   if no RP3 camera app found, it will convert a command line jpg to fits,
#   assuming this jpg exist

from __future__ import print_function
import os, sys

fn    = 'junk.jpg'
debug = False


if len(sys.argv) > 1:
    fn = sys.argv[1]


# grab data
try:
    os.system('raspistill -n -w 1280 -h 960 -o %s' % fn)
except:
    print("No command raspistill, trying to convert existing %s" % fn)


# if the requested extension is jpg, quit here, else assumed fits and continue

if fn[fn.rfind('jpg'):] == 'jpg':
    sys.exit(0)

import numpy as np
from PIL import Image
#import pyfits as fits
from astropy.io import fits

try:
    im = Image.open(fn)
except:
    print("Error processing %s" % fn)
    sys.exit(1)

fnf = fn[ :fn.rfind('.')] + '.fits'
    
data = np.asarray(im)
exif = im._getexif()

nx = data.shape[1]
ny = data.shape[0]

if debug:
    for e in exif.keys():
        print(e,exif[e])

origin = None
if 271 in exif.keys():
    origin = exif[271]

instrument = None
if 272 in exif.keys():
    instrument = exif[272]

obsdate = None
if 36867 in exif.keys():
    obsdate = exif[36867]

print("INS: ",origin)
print("CAM: ",instrument)
print("DAT: ",obsdate)

if len(data.shape) == 3: 
    data = data.sum(axis=2)

if debug:
    import matplotlib.pyplot as plt
    plt.figure()
    plt.imshow(data)
    plt.show()


hdu  = fits.PrimaryHDU(data.astype(np.uint16))
hdu0 = fits.HDUList([hdu])
if obsdate != None:
    hdu.header['DATE']     = obsdate
if origin != None:
    hdu.header['ORIGIN']   = origin
if instrument != None:
    hdu.header['INSTRUME'] = instrument
hdu.header['comment'] = 'Created by the pyASC::getjpg script'
hdu.header['comment'] = 'https://github.com/teuben/pyASC'


hdu0.writeto(fnf,overwrite=True)
print("Written ",fnf)
